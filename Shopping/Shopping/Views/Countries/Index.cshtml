@model PaginatedList<Shopping.Data.Entities.Country>

<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />
@*@model IEnumerable<Shopping.Data.Entities.Country>*@
@*https://www.youtube.com/watch?v=JdxDDs56eCw*@
@{
    ViewData["Title"] = "Index";
}

<h1>Países</h1>

@*<link rel="stylesheet" href="https://cdn.datatables.net/1.10.19/css/jquery.dataTables.min.css"/>*@

<p>
    <a asp-action="Create" class="btn btn-outline-primary">Crear nuevo país</a>
</p>

@*<form asp-action="Index" method="get">
    <div class = "form-actions no-color">
        <p>
            Find by country: <input type="text" name="SearchString" value="@ViewData["CurrentFilter"]"/>
            <input type="submit" value="Search" class="btn btn-default" />
            <a asp-action="Index">Back to Full List </a>
        </p>
    </div>
</form>*@

@using (Html.BeginForm("Index", "Country", FormMethod.Get))
{
    <p>
        Find my country: @Html.TextBox("SearchString", ViewBag.CurrentFilter as string)
        <input type="submit" value="Search" />
    </p>
}

<div class="row">
    <div class=col-md-12>
        <div class="panel panel-default">
            <div class="panel-heading">
                <h3 classs="panel-title">Países</h3>
            </div>
            <div class="panel-body">
                <table class="table table-hover table-responsive table-striped" id="My Table">
                    <thead>
                        <tr>
                            <th>
                                <a asp-action = "Index" asp-route-sortOrder="@ViewData["NameSortParm"]" asp-route-currentFilter="@ViewData["currentFilter"]"> Name</a>                                
                                @*@Html.DisplayNameFor(model => model.Name)*@
                            </th>
                            <th>
                                Name
                            </th>
                            <th></th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model)
                        {
                            <tr>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Name)
                                </td>
                                <td>
                                    <a asp-action="Edit" asp-route-id="@item.Id" class="btn btn-outline-warning">Editar</a> |
                                    <a asp-action="Details" asp-route-id="@item.Id" class="btn btn-outline-info">Detalles</a> |
                                    <a asp-action="Delete" asp-route-id="@item.Id" class="btn btn-outline-danger">Borrar</a>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>

@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}
<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-pageNumber="@(Model.PageIndex -1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @prevDisabled">
   Previous
</a>

<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-pageNumber="@(Model.PageIndex + 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @nextDisabled">
   Next
</a>










